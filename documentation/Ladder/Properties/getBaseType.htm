<HTML>
<HEAD>
<TITLE></TITLE>
<LINK rel="stylesheet" type="text/css" href="../../styles.css">
</HEAD>
<BODY>
<P class="Title">Property : BaseType</P>

<P>
	<a href="#Syntax">Syntax</a> | 
	<a href="#Description">Description</a> | 
	<a href="#Returns">Returns</a> | 
	<a href="#Values">Values</a> | 
	<a href="#Remarks">Remarks</a> | 
	<a href="#Example">Example</a> | 
	<a href="#SeeAlso">See Also</a> 
</P>

<P id="Syntax" class="Header1">Syntax</P>
<P>Public BaseType : Long</P>

<P id="Description" class="Header1">Description</P>
<P>Every object stored in Ladder is an instance of Folder, Item or Reference. Through this
information, Ladder knowns how to manage an object.</P>

<P id="Returns" class="Header1">Returns</P>
<P>[ Long ] - one of 4 constant values listed below</P>

<P id="Values" class="Header1">Values</P>
<p>
	cisRoot - Root Folder - <BR>
	cisFolder - Folder - <BR>
	cisItem - Item - <BR>
	cisReference - Reference <BR>
</p>

<P id="Remarks" class="Header1">Remarks</P>
<P>The values returned are stored in ENetArch_Ladder_Globals as Functions to provide 
global access throughout your code. This method is carried over from other object languages 
where the values are encapsulated in an object, like Java. </P>

<P id="Example" class="Header1">Example</P>
<P> A good function to look at to see how these base types are used is Ladder's getItem ().
<blockquote>
<pre class="codesSegment">
Function getItem ($nID)
{
	$szSQL =
		" SELECT * " .
		" FROM "  . ENetArch_Ladder::cTableName() .
		" WHERE " .
			" ID = " . $nID;
	
	if ($this->cn == null) 
		print ("CN == NULL, object = " . $this->ID() . " - " . $this->Name() . "&lt;BR&gt;");
		
	$rs = mysql_query ($szSQL, $this->cn);
	If (mysql_errno ($this->cn) != 0) 
		print (mysql_error ($this->cn) . "&lt;P&gt;");

	$rowCount = mysql_num_rows ($rs);

	$objItem = null;

	if ($rowCount > 0) 
	{
		$row = mysql_fetch_row($rs);

		switch ($row [4])
		{
			case ENetArch_Ladder_Globals::cisRoot() :
			{ $objItem = new ENetArch_Ladder_Folder ();
			} break;

			case ENetArch_Ladder_Globals::cisFolder() :
			{ $objItem = new ENetArch_Ladder_Folder ();
			} break;

			case ENetArch_Ladder_Globals::cisItem() :
			{ $objItem = new ENetArch_Ladder_Item ();
			} break;

			case ENetArch_Ladder_Globals::cisReference() :
			{ $objItem = new ENetArch_Ladder_Reference ();
			} break;
		}

		if ($objItem != null)
		{
			$objItem->Connect ($this->cn);
			$objItem->setState ($row);
		}
	}

	mysql_free_result($rs);
	
	return ($objItem);
}	
</pre>
</blockquote>

</P>

<P id="See Also" class="Header1">See Also</p>
<P>	
	<a href="getClassID.htm">getClassID</a>
	<a href="isFolder.htm">Folder</a><br>
	<a href="isItem.htm">Item</a><br>
	<a href="isReference.htm">Reference</a><br>
</P>


<P class="copyright">
/*	=======================================<BR>
	Copyright 1998 - 2014 - E Net Arch<BR>
		www.ENetArch.net - 248-686-1407<BR>
		ENetArch on AIM, Yahoo, and Skype<BR>
<BR>
	This program is distributed under the terms of the GNU <BR>
	General Public License (or the Lesser GPL).<BR>
	======================================= */
</P> 


</BODY>
</HTML>
